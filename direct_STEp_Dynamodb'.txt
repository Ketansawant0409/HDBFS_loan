{
  "Comment": "Example state machine that starts with a Lambda function and then stores data in DynamoDB",
  "StartAt": "InvokeLambda",
  "States": {
    "InvokeLambda": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "newlambda",
        "Payload": {
          "Input": "item"
        }
      },
      "ResultPath": "$.lambdaOutput",
      "Next": "PutItemState"
    },
    "PutItemState": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "newtable",
        "Item": {
          "unique_code": { "S.$": "$.lambdaOutput.Payload.unique_code.S" }, 
          "Employee_name": { "S.$": "$.lambdaOutput.Payload.Employee_name.S" },
          "Employee_code": { "S.$": "$.lambdaOutput.Payload.Employee_code.S" },
          "Status": { "S.$": "$.lambdaOutput.Payload.Status.S" }
        }
      },
      "End": true
    }
  }
}

